version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "teledoc-rokket"
    DOCKERCONTAINER: "208054002969.dkr.ecr.us-east-1.amazonaws.com"
phases:
  install:
    commands:
      # - IMAGE_REPO_NAME="teledoc-rokket"
      # - DOCKERCONTAINER="208054002969.dkr.ecr.us-east-1.amazonaws.com"
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 7)
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region us-east-1)
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $DOCKERCONTAINER/$IMAGE_REPO_NAME:latest -t $DOCKERCONTAINER/$IMAGE_REPO_NAME:$COMMIT_HASH -f Dockerfile .
      # - docker build -t teledoc-rokket .
      # - docker tag teledoc-rokket:latest 208054002969.dkr.ecr.us-east-1.amazonaws.com/teledoc-rokket:latest
      - aws eks --region us-east-1 update-kubeconfig --name main-cluster
  post_build:
    commands:
      - docker push $DOCKERCONTAINER/$IMAGE_REPO_NAME:latest
      - docker push $DOCKERCONTAINER/$IMAGE_REPO_NAME:$COMMIT_HASH
      # - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::208054002969:role/CodeBuildKubectlRole --role-session-name codebuild-kubectl --duration-seconds 900)
      # - kubectl set image deployment/teledoc-app-deployment teledoc-app=$DOCKERCONTAINER/$IMAGE_REPO_NAME:latest
      - kubectl set image deployment/teledoc-app-deployment teledoc-app=$DOCKERCONTAINER/$IMAGE_REPO_NAME:$COMMIT_HASH
      - kubectl get deployments
      - echo kubectl get deployments
      # - kubectl apply -f deployment.yaml
      # - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      # - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      # - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      # - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      # - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      # - aws eks update-kubeconfig --name main-cluster
      # - kubectl apply -f deployment.yml
